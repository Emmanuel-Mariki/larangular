{"version":3,"sources":["app.component.ts","app.routing.ts","types/type.component.ts","type.js","types/type.service.ts","types/type-form.component.ts","types/type.module.ts","app.module.ts","main.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["import { Component } from '@angular/core';\n@Component({\n    moduleId:module.id,\n    selector: 'my-app',\n    template:`\n    <top-nav></top-nav>\n    <div class=\"container\">\n      <div class=\"row\">\n          <left-nav></left-nav>\n          <search-box></search-box>\n          <div class=\"col-lg-9\" id=\"content\">\n              <router-outlet></router-outlet>\n          </div>\n      </div>\n    </div>\n    `,\n})\nexport class AppComponent { }\n","import { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport{ AppComponent }       from './app.component';\nimport{ HomeComponent }       from './home/home.component';\n\nconst appRoutes: Routes = [\n  { path: '', component: HomeComponent },\n // { path: '**', component: HomeComponent }\n];\n\nexport const appRoutingProviders: any[] = [\n\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n","import {Component} from \"@angular/core\";\n\n@Component({\n    moduleId:module.id,\n    selector:'property-type',\n    templateUrl:'type.component.html',\n})\n\nexport class TypeComponent{\n\n}",null,"import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\n\n\n\nimport { PropertyTypes } from './type';\n\n@Injectable()\n\nexport class TypeService {\n\n  private headers = new Headers(\n    {\n      'Content-Type': 'application/jsonp',\n    }\n  );\n  private TypeUrl = 'http://localhost/laravel/types';  // URL to web api\n\n  constructor(private http: Http) { }\n\n  create(PropertyTypes: PropertyTypes): Promise<PropertyTypes> {\n    return this.http\n      .post(this.TypeUrl, JSON.stringify({ PropertyTypes }), { headers: this.headers })\n      .toPromise()\n      .then(res => res.json().data)\n      .catch(this.handleError);\n  }\n\n  delete(id: number): Promise<void> {\n    let url = `${this.TypeUrl}/${id}`;\n    return this.http.delete(url, { headers: this.headers })\n      .toPromise()\n      .then(() => null)\n      .catch(this.handleError);\n  }\n\n  update(PropertyTypes:PropertyTypes ): Promise<PropertyTypes> {\n    const url = `${this.TypeUrl}/${PropertyTypes.id}`;\n    return this.http\n      .put(url, JSON.stringify(PropertyTypes), { headers: this.headers })\n      .toPromise()\n      .then(() => PropertyTypes)\n      .catch(this.handleError);\n  }\n\n  getPropertyTypes(): Promise<PropertyTypes[]> {\n    return this.http.get(this.TypeUrl)\n      .toPromise()\n      .then(res => res.json().data as PropertyTypes[])\n      .catch(this.handleError);\n  }\n\n  //getPropertyType(id: number): Promise<PropertyTypes[]> {\n    //return this.getPropertyTypes()\n      //.then(propType => propType.find(propType => propType.id === id));\n  //}\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n\n\n}","import {Component} from \"@angular/core\";\nimport {FormGroup, FormControl,Validators, \n        FormBuilder,FormGroupDirective }from \"@angular/forms\";\n\nimport { TypeService }         from './type.service';\nimport { PropertyTypes } from './type';\n\n@Component({\n    moduleId:module.id,\n    selector:'property-type-form',\n    templateUrl:'type-form.component.html',\n    styleUrls:['type-form.css']\n})\n\nexport class TypeFormComponent{\n\n    types:PropertyTypes[];\n\n    PropertyTypeForm:FormGroup;\n\n    ActionTitle:string = 'Add property types'\n\n    constructor(private _fomBuilder:FormBuilder,private _Service: TypeService)\n    {\n        this._buildForm();\n    }\n\n    private _buildForm(): void \n    {\n        this.PropertyTypeForm = this._fomBuilder.group({\n            name:this._fomBuilder.control(null,\n            Validators.compose([Validators.required, Validators.minLength(3),\n                                Validators.maxLength(15)])\n            ),\n            priority:this._fomBuilder.control(null,\n            Validators.compose([Validators.required,Validators.pattern('[0-9]+')])\n            ),\n            keywords:this._fomBuilder.control(null,\n            Validators.compose([Validators.required, Validators.minLength(10),\n                                Validators.maxLength(100)])\n            ),\n            title:this._fomBuilder.control(null,\n            Validators.compose([Validators.required, Validators.minLength(3),\n                                Validators.maxLength(150)])\n            ),\n            URL:this._fomBuilder.control(null,\n            Validators.compose([Validators.required, Validators.minLength(3),\n                                Validators.maxLength(150)])\n            ),\n            active:this._fomBuilder.control(null, Validators.required),\n            descriptions:this._fomBuilder.control(null,\n            Validators.compose([Validators.required, Validators.minLength(60),\n                                Validators.maxLength(150)])\n            )\n        })\n\n\n        this.PropertyTypeForm.valueChanges.subscribe(data => this.onValueChanged(data));\n        this.onValueChanged(); // (re)set validation messages now\n    }\n\n    onSubmit()\n    {\n        console.log(this.PropertyTypeForm.value);\n        if (!this.PropertyTypeForm) { return; }\n        this._Service.create(this.PropertyTypeForm.value);\n       \n    }\n\n    onValueChanged(data?: any) \n    {\n        if (!this.PropertyTypeForm) { return; }\n        const form = this.PropertyTypeForm;\n        for (const field in this.formErrors) \n        {\n            // clear previous error message (if any)\n            this.formErrors[field] = '';\n            const control = form.get(field);\n            if (control && control.dirty && !control.valid) \n            {\n                const messages = this.validationMessages[field];\n                for (const key in control.errors) {\n                this.formErrors[field] += messages[key] + ' ';\n                }\n            }\n        }\n    }\n\n    formErrors = \n    {\n        'name': '',\n        'priority': '',\n        'keywords':'',\n        'active':'',\n        'title':'',\n        'URL':'',\n        'descriptions':''\n    }\n\n    validationMessages = \n    {\n        'name': \n        {\n            'required':   'Property type name is required.',\n            'minlength':  'Property type name must be at least 3 characters long.',\n            'maxlength':  'Property type name cannot be more than 15 characters long.',\n            'pattern':    'Property type name can only contain alphabetical characters.'\n        },\n\n        'priority': \n        {\n            'required': 'Priority is required.',\n            'pattern':  'Priority can only contain positive integers'\n        },\n\n        'keywords': \n        {\n            'required':     'Keywords are required.',\n            'minlength':    'Keywords must be at least 10 characters long.',\n            'maxlength':    'Keywords cannot be more than 150 characters long.',\n            'StringOnly':   'Keywords can only contain alphabetical characters.'\n        },\n\n        'active': \n        {\n            'required': 'Active is required.',\n            'pattern':  'Active can only contain positive integers'\n        },\n\n        'title': \n        {\n            'required':   'Browser title is required.',\n            'minlength':  'Browser title must be at least 3 characters long.',\n            'maxlength':  'Browser title cannot be more than 15 characters long.',\n            'pattern':    'Browser titlecan only contain alphabetical characters.'\n        },\n\n        'URL': \n        {\n            'required':   'Browser URL is required.',\n            'minlength':  'Browser URL must be at least 3 characters long.',\n            'maxlength':  'Browser URL cannot be more than 15 characters long.',\n            'pattern':    'Browser URL only contain alphabetical characters.'\n        },\n\n        'descriptions': \n        {\n            'required':     'Descriptions is required.',\n            'minlength':    'Descriptions must be at least 60 characters long.',\n            'maxlength':    'Descriptions cannot be more than 150 characters long.',\n        },\n    };\n\n\n}","import { NgModule }           from '@angular/core';\nimport { CommonModule }       from '@angular/common';\nimport { FormsModule,ReactiveFormsModule }        from '@angular/forms';\n\nimport {TypeRouting, PropertyTypeRouteProviders }  from './type.routing'\n\n//import {TypeOfProperty} from \"./type\";\nimport {TypeService} from \"./type.service\";\nimport {TypeComponent} from \"./type.component\";\nimport {TypeListComponent} from \"./type-list.component\"\nimport {TypeFormComponent} from \"./type-form.component\";\n\n\n@NgModule({\n  imports:     \n  [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TypeRouting \n  ],\n  declarations:\n  [ \n   // TypeOfProperty, \n    TypeComponent, \n    TypeFormComponent,\n    TypeListComponent \n  ],\n  exports:      \n  [ \n    TypeComponent \n  ],\n  providers:    \n  [ TypeService,PropertyTypeRouteProviders ]\n})\n\nexport class PropertyTypeModule{\n\n}","///<reference path=\"../../../typings/index.d.ts\"/>\nimport { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpModule, JsonpModule } from '@angular/http';\n\n/* type Imports Rooting */\nimport { routing,appRoutingProviders }  from './app.routing'\n\nimport { AppComponent }   from './app.component';\nimport{ HomeComponent }       from './home/home.component';\nimport{ TopNavComponent }       from './navigation/top/top-nav.component';\nimport{ LeftNavComponent }       from './navigation/left/left-nav.component';\nimport{ SearchBoxComponent }       from './search/search-box.component';\n\n/* Contact Imports */\n//import{ ContactModule }      from './contact/contact.module';\n\n/* type Imports */\nimport{ PropertyTypeModule }      from './types/type.module';\n\n\n@NgModule({\n  imports:\n  [ \n    BrowserModule,\n   // ContactModule,\n    PropertyTypeModule,\n    HttpModule,\n    JsonpModule,\n    routing,\n  ],\n  declarations:\n  [ \n    AppComponent, \n    HomeComponent,\n    TopNavComponent,\n    LeftNavComponent,\n    SearchBoxComponent,\n  ],\n  providers:\n  [\n     appRoutingProviders\n     \n  ],\n  bootstrap:    [ AppComponent ],\n})\nexport class AppModule { }\n\n\n\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app.module';\nconst platform = platformBrowserDynamic();\nplatform.bootstrapModule(AppModule);\n"],"sourceRoot":"/source/"}